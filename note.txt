===================================== Xây dựng chức năng Register Login Logout =====================================
- Register:
	autoload.php: Khi khởi tạo 1 đối tượng nào đó thì Class của đối tượng đó sẽ tự động được lạp vào thông qua phương thức
		__autoload()
	json_decode ( string $json [, bool $assoc = FALSE]
		Khi $assoc được set là TRUE thì json sau khi được decode sẽ được xem dưới dạng mảng 
	Cấu trúc tập tin user.json là mỗi key thì lấy luôn địa chỉ email để làm key, value lưu các thông tin email, password
		và fullname

- Login Setting Logout:
	Khi đã đăng nhập rồi mà vẫn cố tình vào trang login thì sẽ tự động redirect sang trang setting
	Nếu chưa đăng nhập mà vẫn cố tình vào trang setting thì sẽ tự động redirect về trang login

- Navigation:
	Nếu đã đăng nhập rồi thì không hiển thị Navigation cho Login và Register
	Chưa đăng nhập thì không hiển thị Setting là logout
	Kiểm tra nếu mà file đang thực thi nó bằng key nào trong menus thì sẽ active menu đó

===================================== Confirmation Email - Giải pháp 1 =====================================
- Demo:
  Sau khi đăng nhập thành công -> truy cập vào màn hình setting thì việc xác nhận đăng nhập qua email default là No, do 
    đó việc đăng nhập không cần phải vào email để xác nhận
  Khi thiết lập là Yes thì khi Login sẽ được gửi đến 1 liên kết đăng nhập qua email, khi click vào link được gửi qua
    email thì mới Login thành công
  Sau khi vào email và click vào link đăng nhập thành công -> logout rồi tiếp tục thực hiện click vào link đăng nhập 
   trong email 1 lần nữa thì sẽ không thể đăng nhập được 1 lần nữa
- Setting:
	Sau khi đăng ký thành viên thì ngoài việc lưu thông tin email, pass, fullName thì mình sẽ lưu thêm thông tin của
    login_key, login_email_confirm(off/on)
  Khi vừa đăng ký thì login_email_confirm sẽ mang giá trị là off
  Khi login_email_confirm có giá trị là off thì người dùng chỉ nhập đúng email và pass là người dùng có thể đăng nhập được
  Khi login_email_confirm có giá trị là on thì ngoài việc đúng email và password thì có 1 link gửi đến tài khoản email và
    người sử dụng phải click và link đó để đăng nhập
  Khi vào màn hình setting thì từ giá trị của trường login_email_confirm là on hay là off thì từ đó sẽ active cho radio
    xác nhận đăng nhập qua email là Yes hay là No
  Khi người dùng chọn giá trị xác nhận đăng nhập mật khẩu qua email là Yes/No rồi sau đó submit form thì từ giá trị đó cập
    nhật lại giá trị của trường login_email_confirm
- Link:
  Thực hiện cho trường hợp login_email_confirm là on
  Trên link thì truyền thêm biến $time để lưu lại nay thời điểm mà user yêu cầu đăng nhập, để dựa vào time đó để biết được
    link đó có còn time để xử dụng hay không để tránh trường hợp người dùng click vào link cũ
  Tại thời điểm login thì lưu thêm cả time mà người dùng đang yêu cầu login
  Link được gửi qua email cho người sử dụng lưu lại login_key và login_time vào trong Database
- Email:
  Để gửi mail thì sử dụng thư viện là phpmailer
  link download: https://github.com/PHPMailer/PHPMailer
  Đối với class Mail thì cần điều chỉnh lại các thông số đó là: Username, Password, setFrom
  Đối với việc gửi mail mà sử dụng gmail thì cần truy cập vào liên kết: https://myaccount.google.com/lesssecureapps
    để cho phép các ứng dụng khác được quyền gửi mail(có thể)
  Trang process: Kiểm tra xem đã đăng nhập chưa? nếu đã đăng nhập rồi thì chuyển thẳng đến trang setting
  Để khắc phục lỗi "SMTP Error: Could not connect to SMTP host." thì trong Class gửi maill thêm đoạn code sau:
    $mail->SMTPOptions = array(
        'ssl' => array(
            'verify_peer' => false,
            'verify_peer_name' => false,
            'allow_self_signed' => true
        )
    );
- Confirm:
  Để đề phòng người dùng sử dụng lại link cũ để đăng nhập thì kiểm tra xem link đó có còn hạn hay không
  Để đề phòng người dùng điều chỉnh giá trị time trên URL thì cần kiểm tra link hết hạn chưa thêm 1 bước nữa bằng cách
    lấy thực sự time login để so sánh